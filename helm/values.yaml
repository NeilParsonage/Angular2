### lbry Config ####

# use springJDBCURL to generate jdbc-url parameter instead of url in spring's applcation.yml (used in very old spring applications)
springJDBCURL: false

# springboot: enable / disable eureka support in config
eureka:
  enabled: true
  defaultZone: https://eureka-emst2.emst.opitz-consulting.int/eureka

# addintional environment variables in container
env: {}

# active thorntail / springboot profiles
profiles:
  active: []

# springboot / thorntail datasource configuration:
# use "builtin" as default springboot database config or comment out / rename to your required databasename for use in thorntail.
datasource:
  builtin:
    password: 
    username: 
    url:
  # fhiDB:
  #   password:
  #   username:
  #   url:


keycloak:
  realm: "060"
  auth-server-url: https://auth.emst.opitz-consulting.int/auth
  resource: emst2-fhi
  public-client: true
  credentials:
    secret: ""

# enable liquibase init container with liquibase.enabled
# custom liquibase properties may be added to properties.
# remove comment to override default parameters
liquibase:
  enabled: false
  properties:
    url:
    username:
    password:
#    driver: oracle.jdbc.OracleDriver
#    classpath: /liquibase/changelog:/liquibase/classpath
#    changelogFile: changelog/liquibase-changelog-master.xml


#############


# Default values for fhi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.emst.opitz-consulting.int/emst/fhi-emst2
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "default"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
    - host: fhi.emst.opitz-consulting.int
      paths:
        - path: /
          pathType: ImplementationSpecific 
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources:
  limits:
    cpu: 4
    memory: 300Mi
    ephemeral-storage: 100Mi
  requests:
    cpu: 50m
    memory: 128Mi
    ephemeral-storage: 50Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
